---
name: Run Tests

on:
  pull_request:
    types:
      - opened
      - synchronize
      - edited
    paths:
      - 'src/**'
      - 'tests/**'
      - 'Dockerfile'
      - '*.props'
  workflow_call:
  workflow_dispatch:

jobs:
  dotnet-test:
    name: Run solution tests
    runs-on: ubuntu-latest
    permissions:
      statuses: write
      checks: write
      contents: write
      pull-requests: write
      actions: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Setup .NET 8.x
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'
        if: ${{ !contains(runner.name, 'Github Actions') }}

      - uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/Directory.Packages.props') }}

      - name: Install dependencies
        run: |
          dotnet restore ModularMonolith.sln
          dotnet tool install -g dotnet-reportgenerator-globaltool

      - name: Build
        run: dotnet build ModularMonolith.sln

      - name: Run Architecture-Tests
        run: dotnet test --no-restore --no-build --filter "FullyQualifiedName~.ArchitectureTests"

      - name: Run Unit-Tests
        run: dotnet test --no-restore --no-build --logger trx --results-directory "test-results" --collect:"XPlat Code Coverage" --filter "FullyQualifiedName~.UnitTests"

      - name: Run Integration-Tests
        run: dotnet test --no-restore --no-build --logger trx --results-directory "test-results" --collect:"XPlat Code Coverage" --filter "FullyQualifiedName~.IntegrationTests"

      - name: Generate report
        run: reportgenerator "-reports:test-results/*/*.xml" "-targetdir:coverage" "-reporttypes:Cobertura;"

      - name: Upload Unit-Test results
        uses: actions/upload-artifact@v4
        with:
          name: coverage-results
          path: coverage
        if: ${{ !cancelled() }}

      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage/**/Cobertura.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: false
          indicators: true
          output: both
          thresholds: '50 80'
