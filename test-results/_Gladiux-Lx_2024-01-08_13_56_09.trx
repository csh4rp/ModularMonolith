<?xml version="1.0" encoding="utf-8"?>
<TestRun id="8417fce3-c490-4431-bbab-ea699e49c1dc" name="@Gladiux-Lx 2024-01-08 13:56:09" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <Times creation="2024-01-08T13:56:09.8878929+01:00" queuing="2024-01-08T13:56:09.8878930+01:00" start="2024-01-08T13:56:07.7812627+01:00" finish="2024-01-08T13:56:10.2628114+01:00" />
  <TestSettings name="default" id="79576537-f034-4a40-9ac2-3068c3ad184c">
    <Deployment runDeploymentRoot="_Gladiux-Lx_2024-01-08_13_56_09" />
  </TestSettings>
  <Results>
    <UnitTestResult executionId="97451b80-3404-4b79-8d6e-f4c8c047e638" testId="99b00f17-12e4-0307-4388-575ad9f18e65" testName="ModularMonolith.CategoryManagement.Application.UnitTests.Categories.Validators.UpdateCategoryCommandValidatorTests.ShouldReturnInvalid_WhenNameIsEmpty" computerName="Gladiux-Lx" duration="00:00:00.0248073" startTime="2024-01-08T13:56:09.2492482+01:00" endTime="2024-01-08T13:56:09.2492482+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="97451b80-3404-4b79-8d6e-f4c8c047e638" />
    <UnitTestResult executionId="ea6ca04e-0151-47bd-a351-9274518b23ff" testId="e94a6019-79f7-deee-a532-05471e6aabe9" testName="ModularMonolith.CategoryManagement.Application.UnitTests.Categories.CommandHandlers.UpdateCategoryCommandHandlerTests.ShouldReturnNotFoundError_WhenCategoryDoesNotExist" computerName="Gladiux-Lx" duration="00:00:00.0012970" startTime="2024-01-08T13:56:09.8549074+01:00" endTime="2024-01-08T13:56:09.8549075+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ea6ca04e-0151-47bd-a351-9274518b23ff" />
    <UnitTestResult executionId="67f213c0-8eeb-4885-94d1-adc6593479ff" testId="dd66fbc5-c6d6-6bcf-8026-ebf791b73e6b" testName="ModularMonolith.CategoryManagement.Application.UnitTests.Categories.CommandHandlers.CreateCategoryCommandHandlerTests.ShouldReturnConflictError_WhenCategoryNameIsNotUnique" computerName="Gladiux-Lx" duration="00:00:00.0349086" startTime="2024-01-08T13:56:09.8528676+01:00" endTime="2024-01-08T13:56:09.8528677+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="67f213c0-8eeb-4885-94d1-adc6593479ff" />
    <UnitTestResult executionId="9a6bf904-1e11-49a9-accc-87d46153252c" testId="505a7e2f-6568-4439-82b7-156a0aa4a6d4" testName="ModularMonolith.CategoryManagement.Application.UnitTests.Categories.CommandHandlers.CreateCategoryCommandHandlerTests.ShouldCreateCategory_WhenCategoryNameIsUnique" computerName="Gladiux-Lx" duration="00:00:00.6248808" startTime="2024-01-08T13:56:09.8178698+01:00" endTime="2024-01-08T13:56:09.8178699+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9a6bf904-1e11-49a9-accc-87d46153252c" />
    <UnitTestResult executionId="cb5ec256-3a9a-4f4f-92da-a4f7194c83e2" testId="1f3f4b85-60ef-5937-7075-9e254d42e6e0" testName="ModularMonolith.CategoryManagement.Application.UnitTests.Categories.CommandHandlers.UpdateCategoryCommandHandlerTests.ShouldReturnConflictError_WhenCategoryWithNameAlreadyExists" computerName="Gladiux-Lx" duration="00:00:00.0321349" startTime="2024-01-08T13:56:09.8532337+01:00" endTime="2024-01-08T13:56:09.8532337+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="cb5ec256-3a9a-4f4f-92da-a4f7194c83e2" />
    <UnitTestResult executionId="a01d62cb-abf7-4d2a-84bc-e749554b1107" testId="f1360a49-9b97-4d61-d805-58b362c6621e" testName="ModularMonolith.CategoryManagement.Application.UnitTests.Categories.CommandHandlers.DeleteCategoryCommandHandlerTests.ShouldReturnNotFoundError_WhenCategoryDoesNotExist" computerName="Gladiux-Lx" duration="00:00:00.6261355" startTime="2024-01-08T13:56:09.8171685+01:00" endTime="2024-01-08T13:56:09.8171688+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a01d62cb-abf7-4d2a-84bc-e749554b1107" />
    <UnitTestResult executionId="5835375a-289c-4c54-ad6e-b24701af44e2" testId="53f1e349-e71e-35b2-66fa-82e4beb2a363" testName="ModularMonolith.CategoryManagement.Application.UnitTests.Categories.Validators.CreateCategoryCommandValidatorTests.ShouldReturnValid_WhenCommandIsValid" computerName="Gladiux-Lx" duration="00:00:00.0315865" startTime="2024-01-08T13:56:09.2246371+01:00" endTime="2024-01-08T13:56:09.2246671+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5835375a-289c-4c54-ad6e-b24701af44e2" />
    <UnitTestResult executionId="08449a00-2fef-4346-8be6-fa75f55f29fd" testId="4d023332-be3e-f261-4ff1-9aba4337bba7" testName="ModularMonolith.CategoryManagement.Application.UnitTests.Categories.Validators.CreateCategoryCommandValidatorTests.ShouldReturnInvalid_WhenNameIsEmpty" computerName="Gladiux-Lx" duration="00:00:00.0248073" startTime="2024-01-08T13:56:09.2489349+01:00" endTime="2024-01-08T13:56:09.2489350+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="08449a00-2fef-4346-8be6-fa75f55f29fd" />
    <UnitTestResult executionId="60e1a5eb-7381-420c-8d42-824bf210b4de" testId="e16dc3a2-ddd3-02ca-fec7-9fa8a6618255" testName="ModularMonolith.CategoryManagement.Application.UnitTests.Categories.CommandHandlers.UpdateCategoryCommandHandlerTests.ShouldUpdateCategory_WhenNameIsUnique" computerName="Gladiux-Lx" duration="00:00:00.6276278" startTime="2024-01-08T13:56:09.8206515+01:00" endTime="2024-01-08T13:56:09.8206516+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="60e1a5eb-7381-420c-8d42-824bf210b4de" />
    <UnitTestResult executionId="bb77bf12-443c-4330-98d2-13c5cbe02620" testId="0031733d-a9a1-48bf-76ac-ad6e25102457" testName="ModularMonolith.CategoryManagement.Application.UnitTests.Categories.CommandHandlers.DeleteCategoryCommandHandlerTests.ShouldDeleteCategory_WhenCategoryExists" computerName="Gladiux-Lx" duration="00:00:00.0565716" startTime="2024-01-08T13:56:09.8738396+01:00" endTime="2024-01-08T13:56:09.8738398+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="bb77bf12-443c-4330-98d2-13c5cbe02620" />
    <UnitTestResult executionId="87992a07-b93d-41ef-8c88-2902de5bf4bc" testId="97bb6bca-02a6-c202-13f5-4f211994c1c2" testName="ModularMonolith.CategoryManagement.Application.UnitTests.Categories.Validators.UpdateCategoryCommandValidatorTests.ShouldReturnValid_WhenCommandIsValid" computerName="Gladiux-Lx" duration="00:00:00.0315675" startTime="2024-01-08T13:56:09.2336284+01:00" endTime="2024-01-08T13:56:09.2336285+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="87992a07-b93d-41ef-8c88-2902de5bf4bc" />
    <UnitTestResult executionId="3e18b528-68ac-48d5-80fd-e7c744118cdb" testId="eb13ab16-3389-0672-477a-2f0845a6d3c0" testName="ModularMonolith.CategoryManagement.Application.UnitTests.Categories.CommandHandlers.CreateCategoryCommandHandlerTests.ShouldReturnInvalidValueError_WhenParentCategoryDoesNotExist" computerName="Gladiux-Lx" duration="00:00:00.0065395" startTime="2024-01-08T13:56:09.8594982+01:00" endTime="2024-01-08T13:56:09.8594984+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3e18b528-68ac-48d5-80fd-e7c744118cdb" />
    <UnitTestResult executionId="33531070-8f60-43a8-81ba-556dfe550858" testId="2c27cabc-ee9c-47c9-1ce1-629ac81adea3" testName="ModularMonolith.CategoryManagement.Application.UnitTests.Categories.CommandHandlers.UpdateCategoryCommandHandlerTests.ShouldReturnInvalidValueError_WhenParentDoesNotExist" computerName="Gladiux-Lx" duration="00:00:00.0050671" startTime="2024-01-08T13:56:09.8600426+01:00" endTime="2024-01-08T13:56:09.8600427+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="33531070-8f60-43a8-81ba-556dfe550858" />
  </Results>
  <TestDefinitions>
    <UnitTest name="ModularMonolith.CategoryManagement.Application.UnitTests.Categories.Validators.UpdateCategoryCommandValidatorTests.ShouldReturnInvalid_WhenNameIsEmpty" storage="/home/kambie/projects/dotnet/modularmonolith/tests/modules/categorymanagement/modularmonolith.categorymanagement.application.unittests/bin/debug/net8.0/modularmonolith.categorymanagement.application.unittests.dll" id="99b00f17-12e4-0307-4388-575ad9f18e65">
      <Execution id="97451b80-3404-4b79-8d6e-f4c8c047e638" />
      <TestMethod codeBase="/home/kambie/Projects/dotnet/ModularMonolith/tests/Modules/CategoryManagement/ModularMonolith.CategoryManagement.Application.UnitTests/bin/Debug/net8.0/ModularMonolith.CategoryManagement.Application.UnitTests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="ModularMonolith.CategoryManagement.Application.UnitTests.Categories.Validators.UpdateCategoryCommandValidatorTests" name="ShouldReturnInvalid_WhenNameIsEmpty" />
    </UnitTest>
    <UnitTest name="ModularMonolith.CategoryManagement.Application.UnitTests.Categories.CommandHandlers.DeleteCategoryCommandHandlerTests.ShouldReturnNotFoundError_WhenCategoryDoesNotExist" storage="/home/kambie/projects/dotnet/modularmonolith/tests/modules/categorymanagement/modularmonolith.categorymanagement.application.unittests/bin/debug/net8.0/modularmonolith.categorymanagement.application.unittests.dll" id="f1360a49-9b97-4d61-d805-58b362c6621e">
      <Execution id="a01d62cb-abf7-4d2a-84bc-e749554b1107" />
      <TestMethod codeBase="/home/kambie/Projects/dotnet/ModularMonolith/tests/Modules/CategoryManagement/ModularMonolith.CategoryManagement.Application.UnitTests/bin/Debug/net8.0/ModularMonolith.CategoryManagement.Application.UnitTests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="ModularMonolith.CategoryManagement.Application.UnitTests.Categories.CommandHandlers.DeleteCategoryCommandHandlerTests" name="ShouldReturnNotFoundError_WhenCategoryDoesNotExist" />
    </UnitTest>
    <UnitTest name="ModularMonolith.CategoryManagement.Application.UnitTests.Categories.Validators.CreateCategoryCommandValidatorTests.ShouldReturnValid_WhenCommandIsValid" storage="/home/kambie/projects/dotnet/modularmonolith/tests/modules/categorymanagement/modularmonolith.categorymanagement.application.unittests/bin/debug/net8.0/modularmonolith.categorymanagement.application.unittests.dll" id="53f1e349-e71e-35b2-66fa-82e4beb2a363">
      <Execution id="5835375a-289c-4c54-ad6e-b24701af44e2" />
      <TestMethod codeBase="/home/kambie/Projects/dotnet/ModularMonolith/tests/Modules/CategoryManagement/ModularMonolith.CategoryManagement.Application.UnitTests/bin/Debug/net8.0/ModularMonolith.CategoryManagement.Application.UnitTests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="ModularMonolith.CategoryManagement.Application.UnitTests.Categories.Validators.CreateCategoryCommandValidatorTests" name="ShouldReturnValid_WhenCommandIsValid" />
    </UnitTest>
    <UnitTest name="ModularMonolith.CategoryManagement.Application.UnitTests.Categories.CommandHandlers.CreateCategoryCommandHandlerTests.ShouldCreateCategory_WhenCategoryNameIsUnique" storage="/home/kambie/projects/dotnet/modularmonolith/tests/modules/categorymanagement/modularmonolith.categorymanagement.application.unittests/bin/debug/net8.0/modularmonolith.categorymanagement.application.unittests.dll" id="505a7e2f-6568-4439-82b7-156a0aa4a6d4">
      <Execution id="9a6bf904-1e11-49a9-accc-87d46153252c" />
      <TestMethod codeBase="/home/kambie/Projects/dotnet/ModularMonolith/tests/Modules/CategoryManagement/ModularMonolith.CategoryManagement.Application.UnitTests/bin/Debug/net8.0/ModularMonolith.CategoryManagement.Application.UnitTests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="ModularMonolith.CategoryManagement.Application.UnitTests.Categories.CommandHandlers.CreateCategoryCommandHandlerTests" name="ShouldCreateCategory_WhenCategoryNameIsUnique" />
    </UnitTest>
    <UnitTest name="ModularMonolith.CategoryManagement.Application.UnitTests.Categories.CommandHandlers.UpdateCategoryCommandHandlerTests.ShouldUpdateCategory_WhenNameIsUnique" storage="/home/kambie/projects/dotnet/modularmonolith/tests/modules/categorymanagement/modularmonolith.categorymanagement.application.unittests/bin/debug/net8.0/modularmonolith.categorymanagement.application.unittests.dll" id="e16dc3a2-ddd3-02ca-fec7-9fa8a6618255">
      <Execution id="60e1a5eb-7381-420c-8d42-824bf210b4de" />
      <TestMethod codeBase="/home/kambie/Projects/dotnet/ModularMonolith/tests/Modules/CategoryManagement/ModularMonolith.CategoryManagement.Application.UnitTests/bin/Debug/net8.0/ModularMonolith.CategoryManagement.Application.UnitTests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="ModularMonolith.CategoryManagement.Application.UnitTests.Categories.CommandHandlers.UpdateCategoryCommandHandlerTests" name="ShouldUpdateCategory_WhenNameIsUnique" />
    </UnitTest>
    <UnitTest name="ModularMonolith.CategoryManagement.Application.UnitTests.Categories.CommandHandlers.DeleteCategoryCommandHandlerTests.ShouldDeleteCategory_WhenCategoryExists" storage="/home/kambie/projects/dotnet/modularmonolith/tests/modules/categorymanagement/modularmonolith.categorymanagement.application.unittests/bin/debug/net8.0/modularmonolith.categorymanagement.application.unittests.dll" id="0031733d-a9a1-48bf-76ac-ad6e25102457">
      <Execution id="bb77bf12-443c-4330-98d2-13c5cbe02620" />
      <TestMethod codeBase="/home/kambie/Projects/dotnet/ModularMonolith/tests/Modules/CategoryManagement/ModularMonolith.CategoryManagement.Application.UnitTests/bin/Debug/net8.0/ModularMonolith.CategoryManagement.Application.UnitTests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="ModularMonolith.CategoryManagement.Application.UnitTests.Categories.CommandHandlers.DeleteCategoryCommandHandlerTests" name="ShouldDeleteCategory_WhenCategoryExists" />
    </UnitTest>
    <UnitTest name="ModularMonolith.CategoryManagement.Application.UnitTests.Categories.CommandHandlers.UpdateCategoryCommandHandlerTests.ShouldReturnInvalidValueError_WhenParentDoesNotExist" storage="/home/kambie/projects/dotnet/modularmonolith/tests/modules/categorymanagement/modularmonolith.categorymanagement.application.unittests/bin/debug/net8.0/modularmonolith.categorymanagement.application.unittests.dll" id="2c27cabc-ee9c-47c9-1ce1-629ac81adea3">
      <Execution id="33531070-8f60-43a8-81ba-556dfe550858" />
      <TestMethod codeBase="/home/kambie/Projects/dotnet/ModularMonolith/tests/Modules/CategoryManagement/ModularMonolith.CategoryManagement.Application.UnitTests/bin/Debug/net8.0/ModularMonolith.CategoryManagement.Application.UnitTests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="ModularMonolith.CategoryManagement.Application.UnitTests.Categories.CommandHandlers.UpdateCategoryCommandHandlerTests" name="ShouldReturnInvalidValueError_WhenParentDoesNotExist" />
    </UnitTest>
    <UnitTest name="ModularMonolith.CategoryManagement.Application.UnitTests.Categories.CommandHandlers.CreateCategoryCommandHandlerTests.ShouldReturnConflictError_WhenCategoryNameIsNotUnique" storage="/home/kambie/projects/dotnet/modularmonolith/tests/modules/categorymanagement/modularmonolith.categorymanagement.application.unittests/bin/debug/net8.0/modularmonolith.categorymanagement.application.unittests.dll" id="dd66fbc5-c6d6-6bcf-8026-ebf791b73e6b">
      <Execution id="67f213c0-8eeb-4885-94d1-adc6593479ff" />
      <TestMethod codeBase="/home/kambie/Projects/dotnet/ModularMonolith/tests/Modules/CategoryManagement/ModularMonolith.CategoryManagement.Application.UnitTests/bin/Debug/net8.0/ModularMonolith.CategoryManagement.Application.UnitTests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="ModularMonolith.CategoryManagement.Application.UnitTests.Categories.CommandHandlers.CreateCategoryCommandHandlerTests" name="ShouldReturnConflictError_WhenCategoryNameIsNotUnique" />
    </UnitTest>
    <UnitTest name="ModularMonolith.CategoryManagement.Application.UnitTests.Categories.Validators.UpdateCategoryCommandValidatorTests.ShouldReturnValid_WhenCommandIsValid" storage="/home/kambie/projects/dotnet/modularmonolith/tests/modules/categorymanagement/modularmonolith.categorymanagement.application.unittests/bin/debug/net8.0/modularmonolith.categorymanagement.application.unittests.dll" id="97bb6bca-02a6-c202-13f5-4f211994c1c2">
      <Execution id="87992a07-b93d-41ef-8c88-2902de5bf4bc" />
      <TestMethod codeBase="/home/kambie/Projects/dotnet/ModularMonolith/tests/Modules/CategoryManagement/ModularMonolith.CategoryManagement.Application.UnitTests/bin/Debug/net8.0/ModularMonolith.CategoryManagement.Application.UnitTests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="ModularMonolith.CategoryManagement.Application.UnitTests.Categories.Validators.UpdateCategoryCommandValidatorTests" name="ShouldReturnValid_WhenCommandIsValid" />
    </UnitTest>
    <UnitTest name="ModularMonolith.CategoryManagement.Application.UnitTests.Categories.CommandHandlers.UpdateCategoryCommandHandlerTests.ShouldReturnConflictError_WhenCategoryWithNameAlreadyExists" storage="/home/kambie/projects/dotnet/modularmonolith/tests/modules/categorymanagement/modularmonolith.categorymanagement.application.unittests/bin/debug/net8.0/modularmonolith.categorymanagement.application.unittests.dll" id="1f3f4b85-60ef-5937-7075-9e254d42e6e0">
      <Execution id="cb5ec256-3a9a-4f4f-92da-a4f7194c83e2" />
      <TestMethod codeBase="/home/kambie/Projects/dotnet/ModularMonolith/tests/Modules/CategoryManagement/ModularMonolith.CategoryManagement.Application.UnitTests/bin/Debug/net8.0/ModularMonolith.CategoryManagement.Application.UnitTests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="ModularMonolith.CategoryManagement.Application.UnitTests.Categories.CommandHandlers.UpdateCategoryCommandHandlerTests" name="ShouldReturnConflictError_WhenCategoryWithNameAlreadyExists" />
    </UnitTest>
    <UnitTest name="ModularMonolith.CategoryManagement.Application.UnitTests.Categories.Validators.CreateCategoryCommandValidatorTests.ShouldReturnInvalid_WhenNameIsEmpty" storage="/home/kambie/projects/dotnet/modularmonolith/tests/modules/categorymanagement/modularmonolith.categorymanagement.application.unittests/bin/debug/net8.0/modularmonolith.categorymanagement.application.unittests.dll" id="4d023332-be3e-f261-4ff1-9aba4337bba7">
      <Execution id="08449a00-2fef-4346-8be6-fa75f55f29fd" />
      <TestMethod codeBase="/home/kambie/Projects/dotnet/ModularMonolith/tests/Modules/CategoryManagement/ModularMonolith.CategoryManagement.Application.UnitTests/bin/Debug/net8.0/ModularMonolith.CategoryManagement.Application.UnitTests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="ModularMonolith.CategoryManagement.Application.UnitTests.Categories.Validators.CreateCategoryCommandValidatorTests" name="ShouldReturnInvalid_WhenNameIsEmpty" />
    </UnitTest>
    <UnitTest name="ModularMonolith.CategoryManagement.Application.UnitTests.Categories.CommandHandlers.UpdateCategoryCommandHandlerTests.ShouldReturnNotFoundError_WhenCategoryDoesNotExist" storage="/home/kambie/projects/dotnet/modularmonolith/tests/modules/categorymanagement/modularmonolith.categorymanagement.application.unittests/bin/debug/net8.0/modularmonolith.categorymanagement.application.unittests.dll" id="e94a6019-79f7-deee-a532-05471e6aabe9">
      <Execution id="ea6ca04e-0151-47bd-a351-9274518b23ff" />
      <TestMethod codeBase="/home/kambie/Projects/dotnet/ModularMonolith/tests/Modules/CategoryManagement/ModularMonolith.CategoryManagement.Application.UnitTests/bin/Debug/net8.0/ModularMonolith.CategoryManagement.Application.UnitTests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="ModularMonolith.CategoryManagement.Application.UnitTests.Categories.CommandHandlers.UpdateCategoryCommandHandlerTests" name="ShouldReturnNotFoundError_WhenCategoryDoesNotExist" />
    </UnitTest>
    <UnitTest name="ModularMonolith.CategoryManagement.Application.UnitTests.Categories.CommandHandlers.CreateCategoryCommandHandlerTests.ShouldReturnInvalidValueError_WhenParentCategoryDoesNotExist" storage="/home/kambie/projects/dotnet/modularmonolith/tests/modules/categorymanagement/modularmonolith.categorymanagement.application.unittests/bin/debug/net8.0/modularmonolith.categorymanagement.application.unittests.dll" id="eb13ab16-3389-0672-477a-2f0845a6d3c0">
      <Execution id="3e18b528-68ac-48d5-80fd-e7c744118cdb" />
      <TestMethod codeBase="/home/kambie/Projects/dotnet/ModularMonolith/tests/Modules/CategoryManagement/ModularMonolith.CategoryManagement.Application.UnitTests/bin/Debug/net8.0/ModularMonolith.CategoryManagement.Application.UnitTests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="ModularMonolith.CategoryManagement.Application.UnitTests.Categories.CommandHandlers.CreateCategoryCommandHandlerTests" name="ShouldReturnInvalidValueError_WhenParentCategoryDoesNotExist" />
    </UnitTest>
  </TestDefinitions>
  <TestEntries>
    <TestEntry testId="99b00f17-12e4-0307-4388-575ad9f18e65" executionId="97451b80-3404-4b79-8d6e-f4c8c047e638" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e94a6019-79f7-deee-a532-05471e6aabe9" executionId="ea6ca04e-0151-47bd-a351-9274518b23ff" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="dd66fbc5-c6d6-6bcf-8026-ebf791b73e6b" executionId="67f213c0-8eeb-4885-94d1-adc6593479ff" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="505a7e2f-6568-4439-82b7-156a0aa4a6d4" executionId="9a6bf904-1e11-49a9-accc-87d46153252c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="1f3f4b85-60ef-5937-7075-9e254d42e6e0" executionId="cb5ec256-3a9a-4f4f-92da-a4f7194c83e2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f1360a49-9b97-4d61-d805-58b362c6621e" executionId="a01d62cb-abf7-4d2a-84bc-e749554b1107" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="53f1e349-e71e-35b2-66fa-82e4beb2a363" executionId="5835375a-289c-4c54-ad6e-b24701af44e2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4d023332-be3e-f261-4ff1-9aba4337bba7" executionId="08449a00-2fef-4346-8be6-fa75f55f29fd" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e16dc3a2-ddd3-02ca-fec7-9fa8a6618255" executionId="60e1a5eb-7381-420c-8d42-824bf210b4de" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0031733d-a9a1-48bf-76ac-ad6e25102457" executionId="bb77bf12-443c-4330-98d2-13c5cbe02620" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="97bb6bca-02a6-c202-13f5-4f211994c1c2" executionId="87992a07-b93d-41ef-8c88-2902de5bf4bc" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="eb13ab16-3389-0672-477a-2f0845a6d3c0" executionId="3e18b528-68ac-48d5-80fd-e7c744118cdb" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2c27cabc-ee9c-47c9-1ce1-629ac81adea3" executionId="33531070-8f60-43a8-81ba-556dfe550858" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <ResultSummary outcome="Completed">
    <Counters total="13" executed="13" passed="13" failed="0" error="0" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" completed="0" inProgress="0" pending="0" />
    <Output>
      <StdOut>[xUnit.net 00:00:00.00] xUnit.net VSTest Adapter v2.5.6+bf9b858c26 (64-bit .NET 8.0.0)
[xUnit.net 00:00:00.06]   Discovering: ModularMonolith.CategoryManagement.Application.UnitTests
[xUnit.net 00:00:00.09]   Discovered:  ModularMonolith.CategoryManagement.Application.UnitTests
[xUnit.net 00:00:00.09]   Starting:    ModularMonolith.CategoryManagement.Application.UnitTests
[xUnit.net 00:00:00.83]   Finished:    ModularMonolith.CategoryManagement.Application.UnitTests
</StdOut>
    </Output>
    <CollectorDataEntries>
      <Collector agentName="Gladiux-Lx" uri="datacollector://microsoft/CoverletCodeCoverage/1.0" collectorDisplayName="XPlat code coverage">
        <UriAttachments>
          <UriAttachment>
            <A href="Gladiux-Lx/coverage.cobertura.xml"></A>
          </UriAttachment>
        </UriAttachments>
      </Collector>
    </CollectorDataEntries>
  </ResultSummary>
</TestRun>