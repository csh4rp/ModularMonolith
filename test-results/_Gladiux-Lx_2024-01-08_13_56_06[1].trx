<?xml version="1.0" encoding="utf-8"?>
<TestRun id="4c7cf7f1-ca6f-466d-89b5-f60ea2b288e8" name="@Gladiux-Lx 2024-01-08 13:56:06" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <Times creation="2024-01-08T13:56:06.2586477+01:00" queuing="2024-01-08T13:56:06.2586477+01:00" start="2024-01-08T13:56:04.3575624+01:00" finish="2024-01-08T13:56:06.7643304+01:00" />
  <TestSettings name="default" id="df5fe35a-ffb7-4aab-8f48-230cd05cca79">
    <Deployment runDeploymentRoot="_Gladiux-Lx_2024-01-08_13_56_06" />
  </TestSettings>
  <Results>
    <UnitTestResult executionId="97e2befe-76c6-48a9-b7a0-5b6dcddd892c" testId="4e143c74-8592-45a5-9925-d11aae01396b" testName="ModularMonolith.Identity.Application.UnitTests.Account.CommandHandlers.SignInCommandHandlerTests.ShouldNotSignIn_WhenUserNameIsInvalid" computerName="Gladiux-Lx" duration="00:00:00.0015215" startTime="2024-01-08T13:56:06.2153609+01:00" endTime="2024-01-08T13:56:06.2153611+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="97e2befe-76c6-48a9-b7a0-5b6dcddd892c" />
    <UnitTestResult executionId="5126d5ae-9547-4a8c-9f99-eafc94cbe384" testId="2c61bc82-52d3-6886-aa43-c11a27c3ace9" testName="ModularMonolith.Identity.Application.UnitTests.Account.CommandHandlers.SignInCommandHandlerTests.ShouldSignIn_WhenUserNameAndPasswordIsCorrect" computerName="Gladiux-Lx" duration="00:00:00.0422824" startTime="2024-01-08T13:56:06.2181343+01:00" endTime="2024-01-08T13:56:06.2181344+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5126d5ae-9547-4a8c-9f99-eafc94cbe384" />
    <UnitTestResult executionId="ca622237-2aeb-4422-aad7-8468f697e812" testId="0b645dc2-f9c5-c506-369b-3d523b43d891" testName="ModularMonolith.Identity.Application.UnitTests.Account.CommandHandlers.InitializePasswordResetCommandHandlerTests.ShouldInitializePasswordReset_WhenEmailMatchesUser" computerName="Gladiux-Lx" duration="00:00:00.2223079" startTime="2024-01-08T13:56:06.2165634+01:00" endTime="2024-01-08T13:56:06.2165635+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ca622237-2aeb-4422-aad7-8468f697e812" />
    <UnitTestResult executionId="d8ed4112-658e-469d-89f1-70f1c7022c35" testId="30e3d997-fd15-006c-8271-e1c1125b4d4a" testName="ModularMonolith.Identity.Application.UnitTests.Account.CommandHandlers.VerifyAccountCommandHandlerTests.ShouldReturnIInvalidValueError_WhenUserWithIdDoesNotExist" computerName="Gladiux-Lx" duration="00:00:00.0008860" startTime="2024-01-08T13:56:06.1588380+01:00" endTime="2024-01-08T13:56:06.1588382+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d8ed4112-658e-469d-89f1-70f1c7022c35" />
    <UnitTestResult executionId="b55eaa23-d09d-4e56-9853-24ca3c930dc6" testId="b5c0b0cd-a074-cb83-db9a-cd257e25d88d" testName="ModularMonolith.Identity.Application.UnitTests.Account.CommandHandlers.RegisterCommandHandlerTests.ShouldReturnConflict_WhenEmailIsAlreadyUsed" computerName="Gladiux-Lx" duration="00:00:00.0051522" startTime="2024-01-08T13:56:06.2179099+01:00" endTime="2024-01-08T13:56:06.2179100+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b55eaa23-d09d-4e56-9853-24ca3c930dc6" />
    <UnitTestResult executionId="e86ac263-2d37-4ce8-8317-81a4b87d70f5" testId="615fb080-9fe9-648c-8bf1-e3a432f1e892" testName="ModularMonolith.Identity.Application.UnitTests.Account.CommandHandlers.ResetPasswordCommandHandlerTests.ShouldReturnTokenError_WhenPasswordResetTokenIsInvalid" computerName="Gladiux-Lx" duration="00:00:00.0018572" startTime="2024-01-08T13:56:06.2158706+01:00" endTime="2024-01-08T13:56:06.2158707+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e86ac263-2d37-4ce8-8317-81a4b87d70f5" />
    <UnitTestResult executionId="f3d6744b-5462-4f33-90c3-b0302f79da1d" testId="c20ddab8-7424-c3c3-e274-a4fd94018e3d" testName="ModularMonolith.Identity.Application.UnitTests.Account.CommandHandlers.SignInCommandHandlerTests.ShouldReturnInvalidPasswordError_WhenPasswordIsInvalid" computerName="Gladiux-Lx" duration="00:00:00.2017470" startTime="2024-01-08T13:56:06.1621267+01:00" endTime="2024-01-08T13:56:06.1621268+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f3d6744b-5462-4f33-90c3-b0302f79da1d" />
    <UnitTestResult executionId="2af34882-6255-4324-b8fd-87a1194af121" testId="bb310092-7219-f4f4-4f74-7eba90efe498" testName="ModularMonolith.Identity.Application.UnitTests.Account.CommandHandlers.InitializePasswordResetCommandHandlerTests.ShouldNotInitializePasswordReset_WhenEmailDoesNotMatchUser" computerName="Gladiux-Lx" duration="00:00:00.0150792" startTime="2024-01-08T13:56:06.2172394+01:00" endTime="2024-01-08T13:56:06.2172394+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2af34882-6255-4324-b8fd-87a1194af121" />
    <UnitTestResult executionId="399a863b-1782-49ef-b10c-4d258784c787" testId="ce122430-8789-47f8-171d-23f38a33444f" testName="ModularMonolith.Identity.Application.UnitTests.Account.CommandHandlers.ChangePasswordCommandHandlerTests.ShouldNotChangePassword_WhenCurrentPasswordIsInvalid" computerName="Gladiux-Lx" duration="00:00:00.2145326" startTime="2024-01-08T13:56:06.1614767+01:00" endTime="2024-01-08T13:56:06.1614769+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="399a863b-1782-49ef-b10c-4d258784c787" />
    <UnitTestResult executionId="1be8c893-2b60-404c-92a1-54dab93756f2" testId="51d2c3ac-4f0d-7a91-dffb-fa7517463f12" testName="ModularMonolith.Identity.Application.UnitTests.Account.CommandHandlers.RegisterCommandHandlerTests.ShouldRegisterUser_WhenEmailIsNotUsed" computerName="Gladiux-Lx" duration="00:00:00.0226296" startTime="2024-01-08T13:56:06.2174729+01:00" endTime="2024-01-08T13:56:06.2174730+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1be8c893-2b60-404c-92a1-54dab93756f2" />
    <UnitTestResult executionId="5d469972-f96a-4f86-bb8f-a065b3738710" testId="58e785d1-d583-5270-7990-7ed318808f23" testName="ModularMonolith.Identity.Application.UnitTests.Account.CommandHandlers.RegisterCommandHandlerTests.ShouldReturnPasswordError_WhenPasswordDoesNotMatchPolicy" computerName="Gladiux-Lx" duration="00:00:00.2109840" startTime="2024-01-08T13:56:06.2161144+01:00" endTime="2024-01-08T13:56:06.2161145+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5d469972-f96a-4f86-bb8f-a065b3738710" />
    <UnitTestResult executionId="f62b4329-1305-4337-a41c-f7df0d138639" testId="ccf776dc-d193-69c1-1a41-578d24bcfeac" testName="ModularMonolith.Identity.Application.UnitTests.Account.CommandHandlers.ResetPasswordCommandHandlerTests.ShouldResetPassword_WhenPasswordResetTokenIsValid" computerName="Gladiux-Lx" duration="00:00:00.2035751" startTime="2024-01-08T13:56:06.1623967+01:00" endTime="2024-01-08T13:56:06.1623968+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f62b4329-1305-4337-a41c-f7df0d138639" />
    <UnitTestResult executionId="4f88e5ac-e1ab-4b25-9736-1d9d36548723" testId="377e6eab-2002-ec1d-4b84-9fe6e1cc98b2" testName="ModularMonolith.Identity.Application.UnitTests.Account.CommandHandlers.VerifyAccountCommandHandlerTests.ShouldReturnIInvalidValueError_WhenTokenIsInvalid" computerName="Gladiux-Lx" duration="00:00:00.0027242" startTime="2024-01-08T13:56:06.1577775+01:00" endTime="2024-01-08T13:56:06.1577776+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4f88e5ac-e1ab-4b25-9736-1d9d36548723" />
    <UnitTestResult executionId="41f9e872-e75c-4792-8d24-ed72fbcc892b" testId="5f13dcfd-7481-c83f-e955-c6279e90ca31" testName="ModularMonolith.Identity.Application.UnitTests.Account.CommandHandlers.ChangePasswordCommandHandlerTests.ShouldChangePassword_WhenCurrentPasswordIsValid" computerName="Gladiux-Lx" duration="00:00:00.0281892" startTime="2024-01-08T13:56:06.2170076+01:00" endTime="2024-01-08T13:56:06.2170076+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="41f9e872-e75c-4792-8d24-ed72fbcc892b" />
    <UnitTestResult executionId="6a08d53d-d8ab-496c-b43f-a4fe5ddb21a4" testId="93bd44a0-1f98-d8ef-085d-e92ef0dd0acb" testName="ModularMonolith.Identity.Application.UnitTests.Account.CommandHandlers.VerifyAccountCommandHandlerTests.ShouldVerifyAccount_WhenIdMatchesUser" computerName="Gladiux-Lx" duration="00:00:00.1676048" startTime="2024-01-08T13:56:06.1264143+01:00" endTime="2024-01-08T13:56:06.1264439+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6a08d53d-d8ab-496c-b43f-a4fe5ddb21a4" />
  </Results>
  <TestDefinitions>
    <UnitTest name="ModularMonolith.Identity.Application.UnitTests.Account.CommandHandlers.RegisterCommandHandlerTests.ShouldRegisterUser_WhenEmailIsNotUsed" storage="/home/kambie/projects/dotnet/modularmonolith/tests/modules/identity/modularmonolith.identity.application.unittests/bin/debug/net8.0/modularmonolith.identity.application.unittests.dll" id="51d2c3ac-4f0d-7a91-dffb-fa7517463f12">
      <Execution id="1be8c893-2b60-404c-92a1-54dab93756f2" />
      <TestMethod codeBase="/home/kambie/Projects/dotnet/ModularMonolith/tests/Modules/Identity/ModularMonolith.Identity.Application.UnitTests/bin/Debug/net8.0/ModularMonolith.Identity.Application.UnitTests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="ModularMonolith.Identity.Application.UnitTests.Account.CommandHandlers.RegisterCommandHandlerTests" name="ShouldRegisterUser_WhenEmailIsNotUsed" />
    </UnitTest>
    <UnitTest name="ModularMonolith.Identity.Application.UnitTests.Account.CommandHandlers.SignInCommandHandlerTests.ShouldSignIn_WhenUserNameAndPasswordIsCorrect" storage="/home/kambie/projects/dotnet/modularmonolith/tests/modules/identity/modularmonolith.identity.application.unittests/bin/debug/net8.0/modularmonolith.identity.application.unittests.dll" id="2c61bc82-52d3-6886-aa43-c11a27c3ace9">
      <Execution id="5126d5ae-9547-4a8c-9f99-eafc94cbe384" />
      <TestMethod codeBase="/home/kambie/Projects/dotnet/ModularMonolith/tests/Modules/Identity/ModularMonolith.Identity.Application.UnitTests/bin/Debug/net8.0/ModularMonolith.Identity.Application.UnitTests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="ModularMonolith.Identity.Application.UnitTests.Account.CommandHandlers.SignInCommandHandlerTests" name="ShouldSignIn_WhenUserNameAndPasswordIsCorrect" />
    </UnitTest>
    <UnitTest name="ModularMonolith.Identity.Application.UnitTests.Account.CommandHandlers.ChangePasswordCommandHandlerTests.ShouldChangePassword_WhenCurrentPasswordIsValid" storage="/home/kambie/projects/dotnet/modularmonolith/tests/modules/identity/modularmonolith.identity.application.unittests/bin/debug/net8.0/modularmonolith.identity.application.unittests.dll" id="5f13dcfd-7481-c83f-e955-c6279e90ca31">
      <Execution id="41f9e872-e75c-4792-8d24-ed72fbcc892b" />
      <TestMethod codeBase="/home/kambie/Projects/dotnet/ModularMonolith/tests/Modules/Identity/ModularMonolith.Identity.Application.UnitTests/bin/Debug/net8.0/ModularMonolith.Identity.Application.UnitTests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="ModularMonolith.Identity.Application.UnitTests.Account.CommandHandlers.ChangePasswordCommandHandlerTests" name="ShouldChangePassword_WhenCurrentPasswordIsValid" />
    </UnitTest>
    <UnitTest name="ModularMonolith.Identity.Application.UnitTests.Account.CommandHandlers.ResetPasswordCommandHandlerTests.ShouldResetPassword_WhenPasswordResetTokenIsValid" storage="/home/kambie/projects/dotnet/modularmonolith/tests/modules/identity/modularmonolith.identity.application.unittests/bin/debug/net8.0/modularmonolith.identity.application.unittests.dll" id="ccf776dc-d193-69c1-1a41-578d24bcfeac">
      <Execution id="f62b4329-1305-4337-a41c-f7df0d138639" />
      <TestMethod codeBase="/home/kambie/Projects/dotnet/ModularMonolith/tests/Modules/Identity/ModularMonolith.Identity.Application.UnitTests/bin/Debug/net8.0/ModularMonolith.Identity.Application.UnitTests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="ModularMonolith.Identity.Application.UnitTests.Account.CommandHandlers.ResetPasswordCommandHandlerTests" name="ShouldResetPassword_WhenPasswordResetTokenIsValid" />
    </UnitTest>
    <UnitTest name="ModularMonolith.Identity.Application.UnitTests.Account.CommandHandlers.ResetPasswordCommandHandlerTests.ShouldReturnTokenError_WhenPasswordResetTokenIsInvalid" storage="/home/kambie/projects/dotnet/modularmonolith/tests/modules/identity/modularmonolith.identity.application.unittests/bin/debug/net8.0/modularmonolith.identity.application.unittests.dll" id="615fb080-9fe9-648c-8bf1-e3a432f1e892">
      <Execution id="e86ac263-2d37-4ce8-8317-81a4b87d70f5" />
      <TestMethod codeBase="/home/kambie/Projects/dotnet/ModularMonolith/tests/Modules/Identity/ModularMonolith.Identity.Application.UnitTests/bin/Debug/net8.0/ModularMonolith.Identity.Application.UnitTests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="ModularMonolith.Identity.Application.UnitTests.Account.CommandHandlers.ResetPasswordCommandHandlerTests" name="ShouldReturnTokenError_WhenPasswordResetTokenIsInvalid" />
    </UnitTest>
    <UnitTest name="ModularMonolith.Identity.Application.UnitTests.Account.CommandHandlers.ChangePasswordCommandHandlerTests.ShouldNotChangePassword_WhenCurrentPasswordIsInvalid" storage="/home/kambie/projects/dotnet/modularmonolith/tests/modules/identity/modularmonolith.identity.application.unittests/bin/debug/net8.0/modularmonolith.identity.application.unittests.dll" id="ce122430-8789-47f8-171d-23f38a33444f">
      <Execution id="399a863b-1782-49ef-b10c-4d258784c787" />
      <TestMethod codeBase="/home/kambie/Projects/dotnet/ModularMonolith/tests/Modules/Identity/ModularMonolith.Identity.Application.UnitTests/bin/Debug/net8.0/ModularMonolith.Identity.Application.UnitTests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="ModularMonolith.Identity.Application.UnitTests.Account.CommandHandlers.ChangePasswordCommandHandlerTests" name="ShouldNotChangePassword_WhenCurrentPasswordIsInvalid" />
    </UnitTest>
    <UnitTest name="ModularMonolith.Identity.Application.UnitTests.Account.CommandHandlers.SignInCommandHandlerTests.ShouldReturnInvalidPasswordError_WhenPasswordIsInvalid" storage="/home/kambie/projects/dotnet/modularmonolith/tests/modules/identity/modularmonolith.identity.application.unittests/bin/debug/net8.0/modularmonolith.identity.application.unittests.dll" id="c20ddab8-7424-c3c3-e274-a4fd94018e3d">
      <Execution id="f3d6744b-5462-4f33-90c3-b0302f79da1d" />
      <TestMethod codeBase="/home/kambie/Projects/dotnet/ModularMonolith/tests/Modules/Identity/ModularMonolith.Identity.Application.UnitTests/bin/Debug/net8.0/ModularMonolith.Identity.Application.UnitTests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="ModularMonolith.Identity.Application.UnitTests.Account.CommandHandlers.SignInCommandHandlerTests" name="ShouldReturnInvalidPasswordError_WhenPasswordIsInvalid" />
    </UnitTest>
    <UnitTest name="ModularMonolith.Identity.Application.UnitTests.Account.CommandHandlers.RegisterCommandHandlerTests.ShouldReturnConflict_WhenEmailIsAlreadyUsed" storage="/home/kambie/projects/dotnet/modularmonolith/tests/modules/identity/modularmonolith.identity.application.unittests/bin/debug/net8.0/modularmonolith.identity.application.unittests.dll" id="b5c0b0cd-a074-cb83-db9a-cd257e25d88d">
      <Execution id="b55eaa23-d09d-4e56-9853-24ca3c930dc6" />
      <TestMethod codeBase="/home/kambie/Projects/dotnet/ModularMonolith/tests/Modules/Identity/ModularMonolith.Identity.Application.UnitTests/bin/Debug/net8.0/ModularMonolith.Identity.Application.UnitTests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="ModularMonolith.Identity.Application.UnitTests.Account.CommandHandlers.RegisterCommandHandlerTests" name="ShouldReturnConflict_WhenEmailIsAlreadyUsed" />
    </UnitTest>
    <UnitTest name="ModularMonolith.Identity.Application.UnitTests.Account.CommandHandlers.VerifyAccountCommandHandlerTests.ShouldReturnIInvalidValueError_WhenUserWithIdDoesNotExist" storage="/home/kambie/projects/dotnet/modularmonolith/tests/modules/identity/modularmonolith.identity.application.unittests/bin/debug/net8.0/modularmonolith.identity.application.unittests.dll" id="30e3d997-fd15-006c-8271-e1c1125b4d4a">
      <Execution id="d8ed4112-658e-469d-89f1-70f1c7022c35" />
      <TestMethod codeBase="/home/kambie/Projects/dotnet/ModularMonolith/tests/Modules/Identity/ModularMonolith.Identity.Application.UnitTests/bin/Debug/net8.0/ModularMonolith.Identity.Application.UnitTests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="ModularMonolith.Identity.Application.UnitTests.Account.CommandHandlers.VerifyAccountCommandHandlerTests" name="ShouldReturnIInvalidValueError_WhenUserWithIdDoesNotExist" />
    </UnitTest>
    <UnitTest name="ModularMonolith.Identity.Application.UnitTests.Account.CommandHandlers.VerifyAccountCommandHandlerTests.ShouldVerifyAccount_WhenIdMatchesUser" storage="/home/kambie/projects/dotnet/modularmonolith/tests/modules/identity/modularmonolith.identity.application.unittests/bin/debug/net8.0/modularmonolith.identity.application.unittests.dll" id="93bd44a0-1f98-d8ef-085d-e92ef0dd0acb">
      <Execution id="6a08d53d-d8ab-496c-b43f-a4fe5ddb21a4" />
      <TestMethod codeBase="/home/kambie/Projects/dotnet/ModularMonolith/tests/Modules/Identity/ModularMonolith.Identity.Application.UnitTests/bin/Debug/net8.0/ModularMonolith.Identity.Application.UnitTests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="ModularMonolith.Identity.Application.UnitTests.Account.CommandHandlers.VerifyAccountCommandHandlerTests" name="ShouldVerifyAccount_WhenIdMatchesUser" />
    </UnitTest>
    <UnitTest name="ModularMonolith.Identity.Application.UnitTests.Account.CommandHandlers.SignInCommandHandlerTests.ShouldNotSignIn_WhenUserNameIsInvalid" storage="/home/kambie/projects/dotnet/modularmonolith/tests/modules/identity/modularmonolith.identity.application.unittests/bin/debug/net8.0/modularmonolith.identity.application.unittests.dll" id="4e143c74-8592-45a5-9925-d11aae01396b">
      <Execution id="97e2befe-76c6-48a9-b7a0-5b6dcddd892c" />
      <TestMethod codeBase="/home/kambie/Projects/dotnet/ModularMonolith/tests/Modules/Identity/ModularMonolith.Identity.Application.UnitTests/bin/Debug/net8.0/ModularMonolith.Identity.Application.UnitTests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="ModularMonolith.Identity.Application.UnitTests.Account.CommandHandlers.SignInCommandHandlerTests" name="ShouldNotSignIn_WhenUserNameIsInvalid" />
    </UnitTest>
    <UnitTest name="ModularMonolith.Identity.Application.UnitTests.Account.CommandHandlers.InitializePasswordResetCommandHandlerTests.ShouldInitializePasswordReset_WhenEmailMatchesUser" storage="/home/kambie/projects/dotnet/modularmonolith/tests/modules/identity/modularmonolith.identity.application.unittests/bin/debug/net8.0/modularmonolith.identity.application.unittests.dll" id="0b645dc2-f9c5-c506-369b-3d523b43d891">
      <Execution id="ca622237-2aeb-4422-aad7-8468f697e812" />
      <TestMethod codeBase="/home/kambie/Projects/dotnet/ModularMonolith/tests/Modules/Identity/ModularMonolith.Identity.Application.UnitTests/bin/Debug/net8.0/ModularMonolith.Identity.Application.UnitTests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="ModularMonolith.Identity.Application.UnitTests.Account.CommandHandlers.InitializePasswordResetCommandHandlerTests" name="ShouldInitializePasswordReset_WhenEmailMatchesUser" />
    </UnitTest>
    <UnitTest name="ModularMonolith.Identity.Application.UnitTests.Account.CommandHandlers.RegisterCommandHandlerTests.ShouldReturnPasswordError_WhenPasswordDoesNotMatchPolicy" storage="/home/kambie/projects/dotnet/modularmonolith/tests/modules/identity/modularmonolith.identity.application.unittests/bin/debug/net8.0/modularmonolith.identity.application.unittests.dll" id="58e785d1-d583-5270-7990-7ed318808f23">
      <Execution id="5d469972-f96a-4f86-bb8f-a065b3738710" />
      <TestMethod codeBase="/home/kambie/Projects/dotnet/ModularMonolith/tests/Modules/Identity/ModularMonolith.Identity.Application.UnitTests/bin/Debug/net8.0/ModularMonolith.Identity.Application.UnitTests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="ModularMonolith.Identity.Application.UnitTests.Account.CommandHandlers.RegisterCommandHandlerTests" name="ShouldReturnPasswordError_WhenPasswordDoesNotMatchPolicy" />
    </UnitTest>
    <UnitTest name="ModularMonolith.Identity.Application.UnitTests.Account.CommandHandlers.VerifyAccountCommandHandlerTests.ShouldReturnIInvalidValueError_WhenTokenIsInvalid" storage="/home/kambie/projects/dotnet/modularmonolith/tests/modules/identity/modularmonolith.identity.application.unittests/bin/debug/net8.0/modularmonolith.identity.application.unittests.dll" id="377e6eab-2002-ec1d-4b84-9fe6e1cc98b2">
      <Execution id="4f88e5ac-e1ab-4b25-9736-1d9d36548723" />
      <TestMethod codeBase="/home/kambie/Projects/dotnet/ModularMonolith/tests/Modules/Identity/ModularMonolith.Identity.Application.UnitTests/bin/Debug/net8.0/ModularMonolith.Identity.Application.UnitTests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="ModularMonolith.Identity.Application.UnitTests.Account.CommandHandlers.VerifyAccountCommandHandlerTests" name="ShouldReturnIInvalidValueError_WhenTokenIsInvalid" />
    </UnitTest>
    <UnitTest name="ModularMonolith.Identity.Application.UnitTests.Account.CommandHandlers.InitializePasswordResetCommandHandlerTests.ShouldNotInitializePasswordReset_WhenEmailDoesNotMatchUser" storage="/home/kambie/projects/dotnet/modularmonolith/tests/modules/identity/modularmonolith.identity.application.unittests/bin/debug/net8.0/modularmonolith.identity.application.unittests.dll" id="bb310092-7219-f4f4-4f74-7eba90efe498">
      <Execution id="2af34882-6255-4324-b8fd-87a1194af121" />
      <TestMethod codeBase="/home/kambie/Projects/dotnet/ModularMonolith/tests/Modules/Identity/ModularMonolith.Identity.Application.UnitTests/bin/Debug/net8.0/ModularMonolith.Identity.Application.UnitTests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="ModularMonolith.Identity.Application.UnitTests.Account.CommandHandlers.InitializePasswordResetCommandHandlerTests" name="ShouldNotInitializePasswordReset_WhenEmailDoesNotMatchUser" />
    </UnitTest>
  </TestDefinitions>
  <TestEntries>
    <TestEntry testId="4e143c74-8592-45a5-9925-d11aae01396b" executionId="97e2befe-76c6-48a9-b7a0-5b6dcddd892c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2c61bc82-52d3-6886-aa43-c11a27c3ace9" executionId="5126d5ae-9547-4a8c-9f99-eafc94cbe384" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0b645dc2-f9c5-c506-369b-3d523b43d891" executionId="ca622237-2aeb-4422-aad7-8468f697e812" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="30e3d997-fd15-006c-8271-e1c1125b4d4a" executionId="d8ed4112-658e-469d-89f1-70f1c7022c35" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b5c0b0cd-a074-cb83-db9a-cd257e25d88d" executionId="b55eaa23-d09d-4e56-9853-24ca3c930dc6" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="615fb080-9fe9-648c-8bf1-e3a432f1e892" executionId="e86ac263-2d37-4ce8-8317-81a4b87d70f5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c20ddab8-7424-c3c3-e274-a4fd94018e3d" executionId="f3d6744b-5462-4f33-90c3-b0302f79da1d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="bb310092-7219-f4f4-4f74-7eba90efe498" executionId="2af34882-6255-4324-b8fd-87a1194af121" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ce122430-8789-47f8-171d-23f38a33444f" executionId="399a863b-1782-49ef-b10c-4d258784c787" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="51d2c3ac-4f0d-7a91-dffb-fa7517463f12" executionId="1be8c893-2b60-404c-92a1-54dab93756f2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="58e785d1-d583-5270-7990-7ed318808f23" executionId="5d469972-f96a-4f86-bb8f-a065b3738710" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ccf776dc-d193-69c1-1a41-578d24bcfeac" executionId="f62b4329-1305-4337-a41c-f7df0d138639" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="377e6eab-2002-ec1d-4b84-9fe6e1cc98b2" executionId="4f88e5ac-e1ab-4b25-9736-1d9d36548723" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5f13dcfd-7481-c83f-e955-c6279e90ca31" executionId="41f9e872-e75c-4792-8d24-ed72fbcc892b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="93bd44a0-1f98-d8ef-085d-e92ef0dd0acb" executionId="6a08d53d-d8ab-496c-b43f-a4fe5ddb21a4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <ResultSummary outcome="Completed">
    <Counters total="15" executed="15" passed="15" failed="0" error="0" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" completed="0" inProgress="0" pending="0" />
    <Output>
      <StdOut>[xUnit.net 00:00:00.00] xUnit.net VSTest Adapter v2.5.6+bf9b858c26 (64-bit .NET 8.0.0)
[xUnit.net 00:00:00.06]   Discovering: ModularMonolith.Identity.Application.UnitTests
[xUnit.net 00:00:00.10]   Discovered:  ModularMonolith.Identity.Application.UnitTests
[xUnit.net 00:00:00.10]   Starting:    ModularMonolith.Identity.Application.UnitTests
[xUnit.net 00:00:00.43]   Finished:    ModularMonolith.Identity.Application.UnitTests
</StdOut>
    </Output>
    <CollectorDataEntries>
      <Collector agentName="Gladiux-Lx" uri="datacollector://microsoft/CoverletCodeCoverage/1.0" collectorDisplayName="XPlat code coverage">
        <UriAttachments>
          <UriAttachment>
            <A href="Gladiux-Lx/coverage.cobertura[1].xml"></A>
          </UriAttachment>
        </UriAttachments>
      </Collector>
    </CollectorDataEntries>
  </ResultSummary>
</TestRun>